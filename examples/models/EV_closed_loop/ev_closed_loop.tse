version = 4.2

//
// Saved by sw version: 2022.2
//

model "ev_closed_loop" {
    configuration {
        hil_device = "HIL402"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 20e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = False
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
    }

    component Subsystem Root {
        component gen_gain ms_to_kmh2 {
            gain = "3.6"
        }
        [
            position = 9296, 8536
        ]

        component gen_probe ch_inv_out {
        }
        [
            position = 9112, 8560
        ]

        component gen_gain ms_to_kmh1 {
            gain = "3.6"
        }
        [
            position = 9296, 8248
        ]

        component src_scada_input Reference {
            def_value = "10"
            execution_rate = "Ts"
            unit = ""
        }
        [
            position = 9312, 8448
            scale = -1, 1
        ]

        component Subsystem Power_Energy {
            layout = dynamic
            component gen_integrator Integrator1 {
            }
            [
                position = 7992, 7952
            ]

            component gen_sum Sum1 {
                signs = "+-"
            }
            [
                position = 7928, 8096
            ]

            component gen_abs Abs1 {
            }
            [
                position = 8016, 8096
            ]

            component gen_probe Energy {
            }
            [
                position = 8128, 7952
            ]

            component gen_probe Power {
                signal_type = "power"
            }
            [
                position = 8128, 8024
            ]

            component gen_probe Losses {
                signal_type = "power"
            }
            [
                position = 8128, 8096
            ]

            tag From1 {
                value = "P_bat"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 7952
            ]

            tag From2 {
                value = "P_ev"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8104
            ]

            junction Junction1 sp
            [
                position = 7872, 7952
            ]

            junction Junction2 sp
            [
                position = 7872, 8024
            ]

            connect Abs1.out Losses.in as Connection6
            connect Abs1.in Sum1.out as Connection7
            connect From1 Junction1 as Connection3
            connect From2 Sum1.in1 as Connection8
            connect Integrator1.out Energy.in as Connection1
            connect Junction1 Integrator1.in as Connection4
            connect Junction2 Junction1 as Connection10
            connect Power.in Junction2 as Connection9
            connect Sum1.in Junction2 as Connection11
        }
        [
            position = 9504, 8136
            size = 80, 112
        ]

        component Subsystem "Electric Variables" {
            layout = dynamic
            component gen_probe "modulation ratio" {
            }
            [
                position = 8128, 7952
            ]

            component gen_probe "chopper voltage" {
                signal_type = "voltage"
            }
            [
                position = 8128, 8024
            ]

            component gen_probe "battery current" {
                signal_type = "current"
            }
            [
                position = 8128, 8096
            ]

            tag From2 {
                value = "i_ch"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8096
            ]

            tag From1 {
                value = "m_ch"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 7952
            ]

            tag From4 {
                value = "u_ch"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8024
            ]

            connect From1 "modulation ratio.in" as Connection15
            connect From2 "battery current.in" as Connection14
            connect From4 "chopper voltage.in" as Connection13
        }
        [
            position = 9504, 8288
            size = 80, 112
        ]

        component Subsystem "Mechanical Variables" {
            layout = dynamic
            component gen_integrator Integrator1 {
            }
            [
                position = 7976, 7952
            ]

            component gen_probe Distance {
            }
            [
                position = 8128, 7952
            ]

            component gen_probe Velocity {
            }
            [
                position = 8128, 8024
            ]

            component gen_probe "Reference Velocity" {
            }
            [
                position = 8128, 8096
            ]

            component gen_probe Torque {
                signal_type = "torque"
            }
            [
                position = 8128, 8168
            ]

            component gen_probe "Iresistive Force" {
            }
            [
                position = 8128, 8240
            ]

            tag From1 {
                value = "V_ev"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8024
                size = 60, 20
            ]

            tag From3 {
                value = "F_res"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8240
                size = 60, 20
            ]

            tag From2 {
                value = "T_dcm"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8168
                size = 60, 20
            ]

            tag From4 {
                value = "V_ref"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 8096
                size = 60, 20
            ]

            tag From5 {
                value = "V_ev_ms"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7816, 7952
                size = 60, 20
            ]

            connect From3 "Iresistive Force.in" as Connection12
            connect From4 "Reference Velocity.in" as Connection14
            connect From5 Integrator1.in as Connection18
            connect Integrator1.out Distance.in as Connection1
            connect Torque.in From2 as Connection16
            connect Velocity.in From1 as Connection17
        }
        [
            position = 9504, 8440
            size = 80, 112
        ]

        component Subsystem Battery {
            layout = static
            component src_scada_input V_batt {
                def_value = "BATp_V_batt"
                execution_rate = "Ts"
                max = "1000.0"
                min = "0.0"
                unit = "V"
            }
            [
                position = 7768, 7864
            ]

            component gen_probe u_bat {
            }
            [
                position = 7984, 7920
            ]

            component gen_probe P_bat {
            }
            [
                position = 7984, 7984
            ]

            component gen_probe i_ch {
            }
            [
                position = 7984, 8048
            ]

            component gen_product Product {
            }
            [
                position = 7904, 7984
            ]

            port P1 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8048, 7864
                hide_name = True
            ]

            port P2 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8048, 8144
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P_bat"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8064, 7960
                size = 60, 20
            ]

            tag Goto2 {
                value = "i_ch"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8064, 8088
                size = 60, 20
            ]

            junction Junction2 sp
            [
                position = 7856, 7920
            ]

            junction Junction4 sp
            [
                position = 7944, 7984
            ]

            junction Junction6 sp
            [
                position = 7856, 7864
            ]

            junction Junction7 sp
            [
                position = 7864, 8048
            ]

            junction Junction8 sp
            [
                position = 7920, 8048
            ]

            connect Goto1 Junction4 as Connection15
            connect Junction4 Product.out as Connection14
            connect P_bat.in Junction4 as Connection13
            connect Product.in Junction2 as Connection5
            connect u_bat.in Junction2 as Connection7
            connect V_batt.out Junction6 as Connection19
            connect P1 Junction6 as Connection21
            connect Junction2 Junction6 as Connection22
            [
                breakpoints = 7856, 7920; 7856, 7864
            ]
            connect Product.in1 Junction7 as Connection25
            connect Junction7 P2 as Connection26
            connect i_ch.in Junction8 as Connection32
            connect Junction8 Junction7 as Connection33
            [
                breakpoints = 7920, 8048
            ]
            connect Goto2 Junction8 as Connection34

            mask {
                icon = "image(\'emr_images/emr_energy_source.svg\')"
                description = "Energy source block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_energy_source.svg",
                                "Estimation": "emr_images/emr_estimation_source.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    component.unlink()
                ENDCODE
            }
        }
        [
            position = 8088, 8160
            size = 80, 64
        ]

        component Subsystem Chopper {
            layout = static
            component gen_product Product2 {
            }
            [
                position = 7728, 8200
                scale = -1, 1
            ]

            component gen_probe u_ch {
            }
            [
                position = 7928, 8048
            ]

            component gen_product Product1 {
            }
            [
                position = 7720, 7984
            ]

            component gen_probe m_ch {
            }
            [
                position = 7928, 8280
            ]

            component Subsystem Efficiency {
                layout = dynamic
                component gen_product Product1 {
                }
                [
                    position = 7880, 8168
                    scale = -1, 1
                ]

                component gen_product Divider {
                    signs = "/*"
                }
                [
                    position = 7880, 8088
                    scale = -1, 1
                ]

                component sys_signal_switch Switch {
                }
                [
                    position = 7744, 8232
                    scale = -1, 1
                ]

                component gen_product Product2 {
                }
                [
                    position = 7880, 8248
                    scale = -1, 1
                ]

                component src_constant Efficiency {
                    execution_rate = "Ts"
                    value = "CHp_eff"
                }
                [
                    position = 8064, 8080
                    scale = -1, 1
                ]

                port u_bat {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8160
                    scale = -1, 1
                ]

                port i_a_in {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8224
                    scale = -1, 1
                ]

                port i_a {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7624, 8232
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 7992, 8224
                ]

                junction Junction2 sp
                [
                    position = 7992, 8176
                ]

                junction Junction3 sp
                [
                    position = 8024, 8080
                ]

                connect Divider.in1 Junction2 as Connection6
                connect Efficiency.out Junction3 as Connection10
                connect Junction1 i_a_in as Connection4
                connect Junction2 Junction1 as Connection7
                connect Junction3 Divider.in as Connection11
                connect Product1.in1 Junction2 as Connection8
                connect Product2.in Junction1 as Connection5
                connect Product2.in1 Junction3 as Connection12
                connect Switch.in Divider.out as Connection14
                connect Switch.in2 Product1.out as Connection13
                connect Switch.in1 Product2.out as Connection15
                connect i_a Switch.out as Connection16
                connect u_bat Product1.in as Connection1
            }
            [
                position = 7400, 8176
                size = 160, 88
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 7976
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8176
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8032, 7984
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8048, 8208
                hide_name = True
                scale = -1, 1
            ]

            port P5 {
                position = 0.0, 32.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7552, 8320
                hide_name = True
            ]

            tag Goto1 {
                value = "m_ch"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7968, 8248
                size = 60, 20
            ]

            tag Goto2 {
                value = "u_ch"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7936, 8104
                size = 60, 20
            ]

            junction Junction3 sp
            [
                position = 7608, 8120
            ]

            junction Junction10 sp
            [
                position = 7888, 8048
            ]

            junction Junction11 sp
            [
                position = 7520, 7976
            ]

            junction Junction12 sp
            [
                position = 7888, 7984
            ]

            junction Junction13 sp
            [
                position = 7608, 8280
            ]

            junction Junction14 sp
            [
                position = 7808, 8280
            ]

            connect Efficiency.i_a_in Product2.out as Connection9
            connect Goto2 Junction10 as Connection47
            connect Product1.in1 Junction3 as Connection21
            connect Product2.in Junction3 as Connection19
            connect u_ch.in Junction10 as Connection45
            connect Efficiency.u_bat Junction11 as Connection51
            connect Junction11 Product1.in as Connection52
            [
                breakpoints = 7520, 7976; 7520, 7976
            ]
            connect P1 Junction11 as Connection53
            connect Product1.out Junction12 as Connection54
            connect Junction12 Junction10 as Connection55
            [
                breakpoints = 7888, 7984; 7888, 7984
            ]
            connect P3 Junction12 as Connection56
            connect P4 Product2.in1 as Connection57
            connect Junction3 Junction13 as Connection59
            [
                breakpoints = 7608, 8120; 7608, 8120; 7608, 8120; 7608, 8256
            ]
            connect P5 Junction13 as Connection61
            connect P2 Efficiency.i_a as Connection62
            connect Junction13 Junction14 as Connection63
            [
                breakpoints = 7608, 8280
            ]
            connect Junction14 m_ch.in as Connection64
            [
                breakpoints = 7848, 8280; 7848, 8280
            ]
            connect Goto1 Junction14 as Connection65

            mask {
                icon = "image(\'emr_images/emr_mono_physical_converter_ctrl.svg\')"
                description = "Mono-physical converter block with control for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_mono_physical_converter_ctrl.svg",
                                "Estimation": "emr_images/emr_mono_physical_converter_ctrl_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8240, 8160
            size = 80, 64
        ]

        component Subsystem "Armature Winding" {
            layout = static
            component gen_sum Sum1 {
                signs = "+-"
            }
            [
                position = 7568, 8008
            ]

            component gen_z_domain_transfer DTF {
                a_coeff = "[EMp_T_arm, 1]"
                b_coeff = "EMp_K_arm"
                domain = "S-domain"
            }
            [
                position = 7784, 8008
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 8000
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8064
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8008
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8072
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7872, 8008
            ]

            connect DTF.in Sum1.out as Connection3
            connect Sum1.in P1 as Connection4
            connect DTF.out Junction1 as Connection6
            connect Junction1 P3 as Connection7
            connect P2 Junction1 as Connection8
            connect P4 Sum1.in1 as Connection9

            mask {
                icon = "image(\'emr_images/emr_energy_accumulation.svg\')"
                description = "Energy accumulation block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_energy_accumulation.svg",
                                "Estimation": "emr_images/emr_energy_accumulation_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8424, 8160
            size = 80, 64
        ]

        component Subsystem "EM Conversion" {
            layout = static
            component gen_gain Gain2 {
                gain = "EMp_K_em"
            }
            [
                position = 7552, 8064
                scale = -1, 1
            ]

            component gen_probe T_dcm {
            }
            [
                position = 7760, 7960
            ]

            component gen_gain Gain1 {
                gain = "EMp_K_em"
            }
            [
                position = 7552, 8000
            ]

            component gen_probe W_gb {
            }
            [
                position = 7760, 8096
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 8000
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8064
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8000
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8064
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "T_dcm"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7760, 7912
                size = 60, 20
            ]

            tag Goto2 {
                value = "w_gb"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7760, 8152
                size = 60, 20
            ]

            junction Junction1 sp
            [
                position = 7680, 8000
            ]

            junction Junction2 sp
            [
                position = 7680, 8064
            ]

            junction Junction3 sp
            [
                position = 7680, 8000
            ]

            junction Junction4 sp
            [
                position = 7680, 8064
            ]

            junction Junction5 sp
            [
                position = 7680, 7960
            ]

            junction Junction6 sp
            [
                position = 7680, 8096
            ]

            junction Junction7 sp
            [
                position = 7680, 8000
            ]

            junction Junction8 sp
            [
                position = 7680, 8064
            ]

            connect Gain1.out Junction3 as Connection13
            connect Goto1 Junction5 as Connection21
            connect Goto2 Junction6 as Connection24
            connect Junction2 Gain2.in as Connection9
            connect Junction3 Junction1 as Connection14
            connect Junction4 Junction2 as Connection17
            connect T_dcm.in Junction5 as Connection19
            connect W_gb.in Junction6 as Connection22
            connect P1 Gain1.in as Connection25
            connect Gain2.out P2 as Connection26
            connect Junction5 Junction7 as Connection27
            connect Junction7 Junction1 as Connection28
            connect P3 Junction7 as Connection29
            connect Junction6 Junction8 as Connection30
            connect Junction8 Junction4 as Connection31
            connect P4 Junction8 as Connection32

            mask {
                icon = "image(\'emr_images/emr_multi_physical_converter.svg\')"
                description = "Multi-physical converter block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_multi_physical_converter.svg",
                                "Estimation": "emr_images/emr_multi_physical_converter_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8616, 8160
            size = 80, 64
        ]

        component Subsystem Gearbox {
            layout = static
            component gen_gain Gain1 {
                gain = "MTp_K_gear"
            }
            [
                position = 7824, 8024
            ]

            component gen_gain Gain2 {
                gain = "MTp_K_gear"
            }
            [
                position = 7824, 8104
                scale = -1, 1
            ]

            component tm_delay "Unit Delay1" {
            }
            [
                position = 7440, 8048
            ]

            component Subsystem Efficiency {
                layout = dynamic
                component src_constant Efficiency {
                    execution_rate = "Ts"
                    value = "MTp_Gear_eff"
                }
                [
                    position = 7680, 8256
                ]

                component gen_product Product1 {
                }
                [
                    position = 7880, 8168
                ]

                component gen_product Product2 {
                }
                [
                    position = 7880, 8088
                ]

                component gen_product Divider {
                    signs = "*/"
                }
                [
                    position = 7880, 8248
                ]

                component sys_signal_switch Switch {
                }
                [
                    position = 8088, 8232
                ]

                port T_em {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7680, 8112
                ]

                port W_em {
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7680, 8176
                ]

                port T_gear {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8168, 8232
                ]

                junction Junction1 sp
                [
                    position = 7800, 8160
                ]

                junction Junction2 sp
                [
                    position = 7800, 8160
                ]

                junction Junction3 sp
                [
                    position = 7768, 8256
                ]

                connect Divider.in Junction2 as Connection8
                connect Divider.in1 Junction3 as Connection12
                connect Divider.out Switch.in1 as Connection14
                connect Efficiency.out Junction3 as Connection10
                connect Junction1 Product1.in as Connection4
                connect Junction2 Junction1 as Connection7
                connect Junction3 Product2.in as Connection11
                connect Product2.in1 Junction2 as Connection6
                connect Switch.in2 Product1.out as Connection13
                connect Switch.in Product2.out as Connection15
                connect T_em Junction1 as Connection3
                connect T_gear Switch.out as Connection16
                connect W_em Product1.in1 as Connection1
            }
            [
                position = 7600, 8024
                size = 160, 88
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 8000
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8104
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8024
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8104
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7376, 8104
            ]

            connect Efficiency.W_em "Unit Delay1.out" as Connection18
            connect Gain1.in Efficiency.T_gear as Connection2
            connect P1 Efficiency.T_em as Connection22
            connect Gain1.out P3 as Connection23
            connect Gain2.in P4 as Connection24
            connect Gain2.out Junction1 as Connection25
            [
                breakpoints = 7472, 8104
            ]
            connect Junction1 "Unit Delay1.in" as Connection26
            [
                breakpoints = 7376, 8104
            ]
            connect P2 Junction1 as Connection27

            mask {
                icon = "image(\'emr_images/emr_mono_physical_converter.svg\')"
                description = "Mono-physical converter block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_mono_physical_converter.svg",
                                "Estimation": "emr_images/emr_mono_physical_converter_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8800, 8160
            size = 80, 64
        ]

        component Subsystem Wheel {
            layout = static
            component gen_gain Gain1 {
                gain = "1/MTp_R_wheel"
            }
            [
                position = 7552, 8000
            ]

            component gen_product Product1 {
            }
            [
                position = 7688, 8048
            ]

            component gen_gain Gain2 {
                gain = "1/MTp_R_wheel"
            }
            [
                position = 7552, 8096
                scale = -1, 1
            ]

            component gen_probe P_ev {
            }
            [
                position = 7800, 8048
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 8000
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8096
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8000
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P_ev"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7856, 8016
                size = 60, 20
            ]

            junction Junction1 sp
            [
                position = 7632, 8000
            ]

            junction Junction2 sp
            [
                position = 7632, 8096
            ]

            junction Junction3 sp
            [
                position = 7632, 8000
            ]

            junction Junction4 sp
            [
                position = 7632, 8096
            ]

            junction Junction5 sp
            [
                position = 7744, 8048
            ]

            junction Junction6 sp
            [
                position = 7632, 8000
            ]

            junction Junction7 sp
            [
                position = 7632, 8096
            ]

            connect Gain1.out Junction3 as Connection14
            connect Gain2.in Junction4 as Connection17
            connect Goto1 Junction5 as Connection22
            connect Junction3 Junction1 as Connection15
            connect Junction4 Junction2 as Connection18
            connect Junction5 P_ev.in as Connection21
            connect Product1.out Junction5 as Connection20
            connect Gain1.in P1 as Connection23
            connect Gain2.out P2 as Connection24
            connect Product1.in Junction6 as Connection25
            connect Junction6 Junction1 as Connection26
            connect P3 Junction6 as Connection27
            connect Product1.in1 Junction7 as Connection28
            connect Junction7 Junction2 as Connection29
            connect P4 Junction7 as Connection30

            mask {
                icon = "image(\'emr_images/emr_mono_physical_converter.svg\')"
                description = "Mono-physical converter block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_mono_physical_converter.svg",
                                "Estimation": "emr_images/emr_mono_physical_converter_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8976, 8160
            size = 80, 64
        ]

        component Subsystem Chassis {
            layout = static
            component gen_z_domain_transfer DTF {
                a_coeff = "[1, 0]"
                b_coeff = "[CHAp_K_eq]"
                domain = "S-domain"
            }
            [
                position = 7800, 8008
            ]

            component gen_sum Sum1 {
                signs = "+-"
            }
            [
                position = 7576, 8008
            ]

            port P1 {
                position = -40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7256, 8000
                hide_name = True
            ]

            port P2 {
                position = -40.0, 16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8064
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8008
                hide_name = True
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8080
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7872, 8008
            ]

            connect DTF.in Sum1.out as Connection3
            connect Sum1.in P1 as Connection4
            connect DTF.out Junction1 as Connection6
            connect Junction1 P3 as Connection7
            connect P2 Junction1 as Connection8
            connect P4 Sum1.in1 as Connection9

            mask {
                icon = "image(\'emr_images/emr_energy_accumulation.svg\')"
                description = "Energy accumulation block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_energy_accumulation.svg",
                                "Estimation": "emr_images/emr_energy_accumulation_estimation.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 9144, 8160
            size = 80, 64
        ]

        component Subsystem Enviroment {
            layout = static
            component gen_product Product1 {
            }
            [
                position = 8512, 8136
                rotation = right
            ]

            component sys_signal_switch "Signal switch1" {
            }
            [
                position = 8600, 8416
                scale = -1, 1
            ]

            component gen_sum Sum1 {
            }
            [
                position = 8472, 8408
                scale = -1, 1
            ]

            component gen_product Product2 {
            }
            [
                position = 8216, 8192
            ]

            component gen_gain Gain_aero {
                gain = "RDp_Kaero"
            }
            [
                position = 8512, 8208
                rotation = right
            ]

            component src_constant zero {
                execution_rate = "Ts"
                value = "0"
            }
            [
                position = 8712, 8456
                scale = -1, 1
            ]

            component src_constant Const_F_sec {
                execution_rate = "Ts"
                value = "RDp_F_sec"
            }
            [
                position = 8712, 8376
                scale = -1, 1
            ]

            component gen_probe P_env {
            }
            [
                position = 8312, 8192
            ]

            component gen_probe F_res {
            }
            [
                position = 8312, 8312
            ]

            component tm_delay "Unit Delay1" {
            }
            [
                position = 8600, 8296
                rotation = right
            ]

            component tm_delay "Unit Delay2" {
            }
            [
                position = 8512, 8328
                rotation = right
            ]

            port P1 {
                position = 40.0, -16.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 8040, 8408
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8064
                hide_name = True
            ]

            tag Goto1 {
                value = "F_res"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8312, 8376
                size = 60, 20
            ]

            junction Junction1 sp
            [
                position = 8504, 8064
            ]

            junction Junction2 sp
            [
                position = 8520, 8064
            ]

            junction Junction3 sp
            [
                position = 8152, 8064
            ]

            junction Junction4 sp
            [
                position = 8152, 8408
            ]

            junction Junction5 sp
            [
                position = 8152, 8312
            ]

            junction Junction6 sp
            [
                position = 8232, 8312
            ]

            junction Junction7 sp
            [
                position = 8152, 8064
            ]

            junction Junction8 sp
            [
                position = 8152, 8408
            ]

            connect Const_F_sec.out "Signal switch1.in" as Connection12
            [
                breakpoints = 8664, 8376; 8664, 8400
            ]
            connect F_res.in Junction6 as Connection28
            connect Gain_aero.in Product1.out as Connection1
            connect Goto1 Junction6 as Connection30
            connect Junction1 Junction2 as Connection8
            connect Junction2 "Unit Delay1.in" as Connection24
            connect Junction3 Junction1 as Connection15
            connect Junction5 Junction4 as Connection22
            connect Junction6 Junction5 as Connection29
            connect P_env.in Product2.out as Connection20
            connect Product1.in1 Junction1 as Connection7
            connect Product1.in Junction2 as Connection10
            connect Product2.in1 Junction5 as Connection21
            connect "Signal switch1.in1" zero.out as Connection11
            [
                breakpoints = 8632, 8432; 8664, 8432; 8664, 8456
            ]
            connect Sum1.in1 "Signal switch1.out" as Connection3
            connect Sum1.in "Unit Delay2.out" as Connection26
            connect "Unit Delay1.out" "Signal switch1.in2" as Connection25
            connect "Unit Delay2.in" Gain_aero.out as Connection27
            connect Product2.in Junction7 as Connection31
            connect Junction7 Junction3 as Connection32
            connect P2 Junction7 as Connection33
            connect Sum1.out Junction8 as Connection34
            connect Junction8 Junction4 as Connection35
            connect P1 Junction8 as Connection36

            mask {
                icon = "image(\'emr_images/emr_energy_source.svg\')"
                description = "Energy source block for Energetic Macroscopic Representation of models."

                block_type {
                    label = "Block type"
                    widget = combo
                    combo_values = "Simulation", "Estimation"
                    type = string
                    default_value = "Simulation"
                    no_evaluate

                    CODE property_value_changed
                        mdl.refresh_icon(container_handle)
                    ENDCODE
                }

                CODE define_icon
                    images = {"Simulation": "emr_images/emr_energy_source.svg",
                                "Estimation": "emr_images/emr_estimation_source.svg"}
                
                    block_type = mdl.get_property_value(mdl.prop(item_handle, "block_type"))
                    mdl.set_component_icon_image(item_handle, images[block_type])
                ENDCODE

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 9320, 8160
            scale = -1, -1
            size = 80, 64
        ]

        component Subsystem "Chopper Inversion" {
            layout = static
            component gen_limiter Limit1 {
                lower_limit = "-1.0"
                upper_limit = "1.0"
            }
            [
                position = 7384, 8000
                scale = -1, 1
            ]

            component gen_product Product1 {
                signs = "/*"
            }
            [
                position = 7544, 8000
                scale = -1, 1
            ]

            component gen_probe Ref_pre_limit {
            }
            [
                position = 7440, 7904
                rotation = left
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8000
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8008
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 0.0, -32.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 7648, 7904
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7440, 8000
            ]

            connect Junction1 Limit1.in as Connection8
            connect Product1.out Junction1 as Connection7
            connect Ref_pre_limit.in Junction1 as Connection9
            connect Limit1.out P1 as Connection10
            connect Product1.in P3 as Connection11
            connect Product1.in1 P2 as Connection12

            mask {
                icon = "image(\'emr_images/emr_direct_inversion_dist_rej.svg\')"
                description = "Direct inversion with disturbance rejection."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8240, 8416
            size = 80, 64
        ]

        component Subsystem "Armature Winding Inversion" {
            layout = static
            component gen_sum Sum1 {
            }
            [
                position = 7392, 7944
                scale = -1, 1
            ]

            component sys_mp_signal_switch Switch {
                number_of_input_terminals = "4"
            }
            [
                position = 7568, 8008
                scale = -1, 1
            ]

            component src_scada_input "Controller Choice" {
                def_value = "1"
                execution_rate = "Ts"
                max = "4"
                min = "1"
                unit = ""
            }
            [
                position = 7672, 7848
                scale = -1, 1
            ]

            component Subsystem "IP Controller" {
                layout = dynamic
                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7944, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7600, 8120
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "EMi_IPc_Ki"
                }
                [
                    position = 7832, 8072
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "EMi_IPc_Kp"
                }
                [
                    position = 7520, 8120
                    scale = -1, 1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 7736, 8072
                    scale = -1, 1
                ]

                port u_ch_a_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7448, 8120
                    scale = -1, 1
                ]

                port i_a_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8032
                    scale = -1, 1
                ]

                port i_a_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8104
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8024, 8032
                ]

                connect Gain1.out Integrator1.in as Connection6
                connect Gain2.in Sum2.out as Connection14
                connect Junction1 Sum1.in as Connection11
                connect Sum1.out Gain1.in as Connection9
                connect Sum2.in Integrator1.out as Connection8
                connect Sum2.in1 Junction1 as Connection12
                connect i_a_meas Junction1 as Connection10
                connect i_a_ref Sum1.in1 as Connection4
                connect u_ch_a_ref Gain2.out as Connection13
            }
            [
                position = 7800, 8168
                size = 112, 56
            ]

            component Subsystem "P Controller" {
                layout = dynamic
                component gen_gain Gain1 {
                    gain = "EMi_Pc_Kp"
                }
                [
                    position = 7800, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7888, 8072
                    scale = -1, 1
                ]

                port u_ch_a_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7656, 8072
                    scale = -1, 1
                ]

                port i_a_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8032
                    scale = -1, 1
                ]

                port i_a_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8104
                    scale = -1, 1
                ]

                connect Gain1.in Sum1.out as Connection2
                connect Gain1.out u_ch_a_ref as Connection1
                connect i_a_meas Sum1.in as Connection5
                connect i_a_ref Sum1.in1 as Connection4
            }
            [
                position = 7800, 7928
                size = 112, 56
            ]

            component Subsystem "PI Controller - pp" {
                layout = dynamic
                component gen_integrator Integrator1 {
                }
                [
                    position = 7736, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 7600, 8120
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "EMi_PIc_pp_Kp"
                }
                [
                    position = 7832, 8184
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "EMi_PIc_pp_Ki"
                }
                [
                    position = 7832, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7992, 8128
                    scale = -1, 1
                ]

                port u_ch_a_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7496, 8120
                    scale = -1, 1
                ]

                port i_a_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8088
                    scale = -1, 1
                ]

                port i_a_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8160
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 7896, 8128
                ]

                connect Gain1.out Integrator1.in as Connection6
                connect Gain1.in Junction1 as Connection10
                connect Gain2.in Junction1 as Connection12
                connect Junction1 Sum1.out as Connection11
                connect Sum2.in1 Gain2.out as Connection13
                connect Sum2.in Integrator1.out as Connection8
                connect i_a_meas Sum1.in as Connection5
                connect i_a_ref Sum1.in1 as Connection4
                connect u_ch_a_ref Sum2.out as Connection7
            }
            [
                position = 7800, 8008
                size = 112, 56
            ]

            component Subsystem "PI Controller - pc" {
                layout = dynamic
                component gen_sum Sum2 {
                }
                [
                    position = 7600, 8120
                    scale = -1, 1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 7736, 8072
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "EMi_PIc_pc_Ki"
                }
                [
                    position = 7832, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7992, 8128
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "EMi_PIc_pc_Kp"
                }
                [
                    position = 7832, 8184
                    scale = -1, 1
                ]

                port u_ch_a_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7496, 8120
                    scale = -1, 1
                ]

                port i_a_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8088
                    scale = -1, 1
                ]

                port i_a_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8160
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 7896, 8128
                ]

                connect Gain1.out Integrator1.in as Connection6
                connect Gain1.in Junction1 as Connection10
                connect Gain2.in Junction1 as Connection12
                connect Junction1 Sum1.out as Connection11
                connect Sum2.in1 Gain2.out as Connection13
                connect Sum2.in Integrator1.out as Connection8
                connect i_a_meas Sum1.in as Connection5
                connect i_a_ref Sum1.in1 as Connection4
                connect u_ch_a_ref Sum2.out as Connection7
            }
            [
                position = 7800, 8088
                size = 112, 56
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7264, 7944
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 7792
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8000
                hide_name = True
                scale = -1, 1
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8176
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7872, 8000
            ]

            junction Junction2 sp
            [
                position = 7872, 8080
            ]

            junction Junction3 sp
            [
                position = 7896, 8176
            ]

            junction Junction4 sp
            [
                position = 7896, 8096
            ]

            junction Junction5 sp
            [
                position = 7896, 8016
            ]

            junction Junction6 sp
            [
                position = 7872, 8000
            ]

            junction Junction7 sp
            [
                position = 7872, 8000
            ]

            junction Junction8 sp
            [
                position = 7896, 8176
            ]

            connect "Controller Choice.out" Switch.ctrl as Connection1
            connect "IP Controller.i_a_meas" Junction2 as Connection15
            connect "IP Controller.u_ch_a_ref" Switch.in3 as Connection8
            connect Junction1 "P Controller.i_a_meas" as Connection11
            connect Junction2 Junction1 as Connection14
            connect Junction3 "IP Controller.i_a_ref" as Connection18
            connect Junction5 Junction4 as Connection24
            connect Junction6 Junction1 as Connection29
            connect "P Controller.i_a_ref" Junction5 as Connection23
            connect "P Controller.u_ch_a_ref" Switch.in as Connection5
            [
                breakpoints = 7656, 7928; 7656, 7984
            ]
            connect "PI Controller - pc.i_a_meas" Junction2 as Connection13
            connect "PI Controller - pc.i_a_ref" Junction4 as Connection22
            connect "PI Controller - pc.u_ch_a_ref" Switch.in2 as Connection7
            [
                breakpoints = 7656, 8088; 7656, 8024
            ]
            connect "PI Controller - pp.i_a_ref" Junction5 as Connection25
            connect "PI Controller - pp.u_ch_a_ref" Switch.in1 as Connection6
            connect Switch.out Sum1.in1 as Connection4
            connect "PI Controller - pp.i_a_meas" Junction7 as Connection31
            connect Junction7 Junction6 as Connection32
            connect P3 Junction7 as Connection33
            connect Junction4 Junction8 as Connection34
            connect Junction8 Junction3 as Connection35
            connect P4 Junction8 as Connection36
            connect P2 Sum1.in as Connection37
            connect P1 Sum1.out as Connection38

            mask {
                icon = "image(\'emr_images/emr_indirect_inversion.svg\')"
                description = "Indirect inversion."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8424, 8416
            size = 80, 64
        ]

        component Subsystem "EM Conversion Inversion" {
            layout = static
            component gen_gain Gain1 {
                gain = "1.0/EMp_K_em"
            }
            [
                position = 7648, 8000
                scale = -1, 1
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8000
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8000
                hide_name = True
                scale = -1, 1
            ]

            connect Gain1.out P1 as Connection1
            connect Gain1.in P2 as Connection2

            mask {
                icon = "image(\'emr_images/emr_direct_inversion.svg\')"
                description = "Direct inversion."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8616, 8432
            size = 80, 64
        ]

        component Subsystem "Gerbox Inversion" {
            layout = static
            component gen_gain Gain1 {
                gain = "1.0/MTp_K_gear"
            }
            [
                position = 7648, 8000
                scale = -1, 1
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8000
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8000
                hide_name = True
                scale = -1, 1
            ]

            connect Gain1.out P1 as Connection1
            connect Gain1.in P2 as Connection2

            mask {
                icon = "image(\'emr_images/emr_direct_inversion.svg\')"
                description = "Direct inversion."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8800, 8432
            size = 80, 64
        ]

        component Subsystem "Wheel Inversion" {
            layout = static
            component gen_gain Gain1 {
                gain = "MTp_R_wheel"
            }
            [
                position = 7664, 8000
                scale = -1, 1
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8000
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8000
                hide_name = True
                scale = -1, 1
            ]

            connect Gain1.out P1 as Connection1
            connect Gain1.in P2 as Connection2

            mask {
                icon = "image(\'emr_images/emr_direct_inversion.svg\')"
                description = "Direct inversion."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 8976, 8432
            size = 80, 64
        ]

        component Subsystem "Chassis Inversion" {
            layout = static
            component sys_mp_signal_switch Switch {
                number_of_input_terminals = "3"
            }
            [
                position = 7552, 8072
                scale = -1, 1
            ]

            component src_scada_input "Controller Choice" {
                def_value = "1"
                execution_rate = "Ts"
                max = "3"
                min = "1"
                unit = ""
            }
            [
                position = 7656, 7920
                scale = -1, 1
            ]

            component gen_sum Sum1 {
            }
            [
                position = 7376, 8016
                scale = -1, 1
            ]

            component Subsystem "P Controller" {
                layout = dynamic
                component gen_gain Gain1 {
                    gain = "CHAi_Pc_Kp"
                }
                [
                    position = 7800, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7888, 8072
                    scale = -1, 1
                ]

                port v_veh_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8104
                    scale = -1, 1
                ]

                port v_veh_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8000, 8032
                    scale = -1, 1
                ]

                port F_veh_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7656, 8072
                    scale = -1, 1
                ]

                connect Gain1.out F_veh_ref as Connection1
                connect Gain1.in Sum1.out as Connection2
                connect v_veh_meas Sum1.in as Connection5
                connect v_veh_ref Sum1.in1 as Connection4
            }
            [
                position = 7784, 8000
                size = 112, 56
            ]

            component Subsystem "PI Controller" {
                layout = dynamic
                component gen_gain Gain1 {
                    gain = "CHAi_PIc_Ki"
                }
                [
                    position = 7832, 8072
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7992, 8128
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                }
                [
                    position = 7600, 8120
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "CHAi_PIc_Kp"
                }
                [
                    position = 7832, 8184
                    scale = -1, 1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 7736, 8072
                    scale = -1, 1
                ]

                port v_veh_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8160
                    scale = -1, 1
                ]

                port v_veh_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8088
                    scale = -1, 1
                ]

                port F_veh_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7496, 8120
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 7896, 8128
                ]

                connect F_veh_ref Sum2.out as Connection7
                connect Gain1.out Integrator1.in as Connection6
                connect Gain1.in Junction1 as Connection10
                [
                    breakpoints = 7896, 8072
                ]
                connect Gain2.in Junction1 as Connection12
                connect Junction1 Sum1.out as Connection11
                [
                    breakpoints = 7896, 8136
                ]
                connect Sum2.in1 Gain2.out as Connection13
                [
                    breakpoints = 7696, 8128; 7696, 8184
                ]
                connect Sum2.in Integrator1.out as Connection8
                connect v_veh_meas Sum1.in as Connection5
                connect v_veh_ref Sum1.in1 as Connection4
            }
            [
                position = 7784, 8080
                size = 112, 56
            ]

            component Subsystem "IP Controller" {
                layout = dynamic
                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7600, 8120
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7944, 8072
                    scale = -1, 1
                ]

                component gen_gain Gain1 {
                    gain = "CHAi_IPc_Ki"
                }
                [
                    position = 7832, 8072
                    scale = -1, 1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 7736, 8072
                    scale = -1, 1
                ]

                component gen_gain Gain2 {
                    gain = "CHAi_IPc_Kp"
                }
                [
                    position = 7520, 8120
                    scale = -1, 1
                ]

                port v_veh_ref {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8104
                    scale = -1, 1
                ]

                port v_veh_meas {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8104, 8032
                    scale = -1, 1
                ]

                port F_veh_ref {
                    position = left:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7448, 8120
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8024, 8032
                ]

                connect F_veh_ref Gain2.out as Connection13
                connect Gain1.out Integrator1.in as Connection6
                connect Gain2.in Sum2.out as Connection14
                connect Junction1 Sum1.in as Connection11
                connect Sum1.out Gain1.in as Connection9
                connect Sum2.in Integrator1.out as Connection8
                connect Sum2.in1 Junction1 as Connection12
                connect v_veh_meas Junction1 as Connection10
                connect v_veh_ref Sum1.in1 as Connection4
            }
            [
                position = 7784, 8160
                size = 112, 56
            ]

            port P1 {
                position = -40.0, 0.0
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                }
            }
            [
                position = 7256, 8016
                hide_name = True
                scale = -1, 1
            ]

            port P2 {
                position = 40.0, -16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 7872
                hide_name = True
                scale = -1, 1
            ]

            port P3 {
                position = 40.0, 0.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 7992
                hide_name = True
                scale = -1, 1
            ]

            port P4 {
                position = 40.0, 16.0
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                }
            }
            [
                position = 8040, 8088
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7944, 8088
            ]

            junction Junction2 sp
            [
                position = 7944, 8088
            ]

            junction Junction3 sp
            [
                position = 7960, 7992
            ]

            junction Junction4 sp
            [
                position = 7960, 8072
            ]

            junction Junction5 sp
            [
                position = 7960, 7992
            ]

            junction Junction6 sp
            [
                position = 7944, 8088
            ]

            connect "Controller Choice.out" Switch.ctrl as Connection1
            connect "IP Controller.v_veh_meas" Junction4 as Connection21
            connect "IP Controller.F_veh_ref" Switch.in2 as Connection7
            [
                breakpoints = 7712, 8160; 7712, 8096
            ]
            connect Junction1 "IP Controller.v_veh_ref" as Connection10
            [
                breakpoints = 7944, 8112; 7944, 8168
            ]
            connect Junction2 Junction1 as Connection13
            connect Junction3 "P Controller.v_veh_meas" as Connection17
            connect "P Controller.v_veh_ref" Junction2 as Connection14
            connect "P Controller.F_veh_ref" Switch.in as Connection6
            [
                breakpoints = 7712, 8000; 7712, 8064
            ]
            connect "PI Controller.v_veh_meas" Junction4 as Connection19
            connect Switch.in1 "PI Controller.F_veh_ref" as Connection5
            connect Switch.out Sum1.in1 as Connection4
            connect P2 Sum1.in as Connection22
            connect Junction4 Junction5 as Connection23
            connect Junction5 Junction3 as Connection24
            connect P3 Junction5 as Connection25
            connect "PI Controller.v_veh_ref" Junction6 as Connection26
            connect Junction6 Junction2 as Connection27
            connect P4 Junction6 as Connection28
            connect P1 Sum1.out as Connection29

            mask {
                icon = "image(\'emr_images/emr_indirect_inversion.svg\')"
                description = "Indirect inversion."

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }

            CODE component_init
                component.unlink()
            ENDCODE
        }
        [
            position = 9144, 8432
            size = 80, 64
        ]

        tag Goto1 {
            value = "V_ev"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 9384, 8248
            size = 60, 20
        ]

        tag Goto2 {
            value = "V_ref"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 9392, 8536
            size = 60, 20
        ]

        tag Goto3 {
            value = "V_ev_ms"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 9384, 8304
            size = 60, 20
        ]

        junction Junction17 sp
        [
            position = 8168, 8144
        ]

        junction Junction18 sp
        [
            position = 8504, 8176
        ]

        junction Junction19 sp
        [
            position = 8520, 8144
        ]

        junction Junction20 sp
        [
            position = 9208, 8176
        ]

        junction Junction21 sp
        [
            position = 9224, 8144
        ]

        junction Junction22 sp
        [
            position = 9056, 8432
        ]

        junction Junction24 sp
        [
            position = 9224, 8248
        ]

        junction Junction25 sp
        [
            position = 9248, 8248
        ]

        junction Junction26 sp
        [
            position = 9248, 8448
        ]

        connect Goto1 ms_to_kmh1.out as Connection119
        connect Goto2 ms_to_kmh2.out as Connection127
        connect Chopper.P2 Battery.P2 as Connection132
        connect "Armature Winding.P1" Chopper.P3 as Connection133
        connect Chopper.P4 "Armature Winding.P2" as Connection134
        connect Gearbox.P2 "EM Conversion.P4" as Connection137
        connect "EM Conversion.P3" Gearbox.P1 as Connection138
        connect Wheel.P1 Gearbox.P3 as Connection139
        connect Gearbox.P4 Wheel.P2 as Connection140
        connect Chassis.P2 Wheel.P4 as Connection141
        connect Wheel.P3 Chassis.P1 as Connection142
        connect Chopper.P1 Junction17 as Connection145
        connect Junction17 Battery.P1 as Connection146
        connect "Chopper Inversion.P3" Junction17 as Connection147
        [
            breakpoints = 8240, 8240; 8168, 8240
        ]
        connect "Chopper Inversion.P1" Chopper.P5 as Connection148
        connect "Armature Winding Inversion.P1" "Chopper Inversion.P2" as Connection149
        connect "EM Conversion Inversion.P1" "Armature Winding Inversion.P4" as Connection150
        connect "Gerbox Inversion.P1" "EM Conversion Inversion.P2" as Connection151
        connect "Wheel Inversion.P1" "Gerbox Inversion.P2" as Connection152
        connect "EM Conversion.P2" Junction18 as Connection154
        connect Junction18 "Armature Winding.P4" as Connection155
        connect "Armature Winding Inversion.P2" Junction18 as Connection156
        connect "Armature Winding.P3" Junction19 as Connection157
        connect Junction19 "EM Conversion.P1" as Connection158
        connect "Armature Winding Inversion.P3" Junction19 as Connection159
        connect Chassis.P4 Junction20 as Connection160
        connect Junction20 Enviroment.P1 as Connection161
        connect "Chassis Inversion.P2" Junction20 as Connection162
        connect Enviroment.P2 Junction21 as Connection163
        connect Junction21 Chassis.P3 as Connection164
        connect "Chassis Inversion.P1" Junction22 as Connection172
        connect Junction22 "Wheel Inversion.P2" as Connection173
        connect ch_inv_out.in Junction22 as Connection174
        connect "Chassis Inversion.P3" Junction24 as Connection178
        connect Junction24 Junction21 as Connection179
        connect ms_to_kmh1.in Junction25 as Connection181
        connect Junction25 Junction24 as Connection182
        connect Goto3 Junction25 as Connection183
        connect Reference.out Junction26 as Connection189
        connect Junction26 ms_to_kmh2.in as Connection190
        [
            breakpoints = 9248, 8448; 9248, 8448
        ]
        connect "Chassis Inversion.P4" Junction26 as Connection191
    }

    default {
        gen_abs {
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            _tunable = "False"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1,1]"
            a_coeff = "[1,1]"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        
        # *************************************************************************
        #                        Battery parameters (BATp)                        
        # *************************************************************************
        
        BATp_V_batt = 400.0;      # Battery Voltage considered constant (V)
            
        # *************************************************************************
        #                         Chopper parameters (CHp)                        
        # *************************************************************************
        
        CHp_eff = 95.0/100.0;             # Chopper efficiency considered constant
        
        # *************************************************************************
        #                     Electric Machine parameters (EMp)                   
        # *************************************************************************
        
        # --- DCM Parameters ---
        # --- DCM by separately excited of 32 kW ---
        
        # --- Description ---
        
        EMp_U_arm_nom = 400.0;          # Nominal voltage of the armature (V)
        EMp_I_arm_nom = 162.0;          # Nominal Current of the armature (A)
        EMp_N_nom = 2840.0;             # Nominal speed (tr/min)
        EMp_N_max = 6000.0;             # Maximal speed (tr/min)
        EMp_W_nom = np.pi/30.0*EMp_N_nom;  # Nominal speed (rad/s)
        EMp_P_nom = 65e3;               # Nominal power (W)
        EMp_J = 0.12;                   # Rotor Inertia (kg_m^2)
        EMp_M = 155.0;                  # Machine mass (kg)
        
        # --- Armature winding ---
        
        EMp_R_arm = 0.35;               # Armature resistance (Ohm)
        EMp_L_arm = 6.5e-3;             # Armature inductance (H)
        
        EMp_K_arm = 1/EMp_R_arm;            # Gain of the armature transfer function
        EMp_T_arm = EMp_L_arm/EMp_R_arm;    # Time constant of the armature transfer function (s)
        
        # --- Electro-Mechanical conversion ---	
            
        EMp_K_em = (EMp_U_arm_nom-EMp_R_arm*EMp_I_arm_nom)/(EMp_W_nom); # Torque Coefficient via the excitation Flux
        
        # *************************************************************************
        #                  Mechanical Transmission parameters (MTp)               
        # *************************************************************************
        
        # --- Gearbox (reductor) ---
        
        MTp_Gear_eff = 80.0/100.0;      # Gearbox efficiency considered constant
        MTp_K_gear = 5.0;               # Gearbox ratio
        
        # --- Wheel ---
        
        MTp_D_wheel = 0.52;             # Wheel diameter (m)
        MTp_R_wheel = MTp_D_wheel/2.0;  # MT_D_wheel
        MTp_J_wheel = 4.3;              # Wheel inertia (kg_m^2)
        
        # *************************************************************************
        #                         Chassis parameters (CHAp)                       
        # *************************************************************************
        
        CHAp_M_eq = 1.4e3;              # Equivalent mass (shaft + chassis+ 2 passengers)
        CHAp_K_eq = 1.0/CHAp_M_eq;      # Velocity gain
        
        # *************************************************************************
        #                    Environment - Road parameters (RDp)                  
        # *************************************************************************
        
        # --- Mechanical source parameters ---
        
        RDp_wheelbase = 2.4;                    # Wheelbase (m)
        RDp_w_ev = 1.6;                         # EV width (m)
        RDp_g = 9.81;                           # gravity (m/s^2)
        RDp_A = 2.0;                            # Frontal aera (m^2)
        RDp_Cx = 0.35;                          # Drag coefficient
        RDp_ro = 1.223;                         # Density of the air with 20C under 1013 mbar (kg/m^3)
        RDp_Kaero = RDp_ro*RDp_Cx*RDp_A/2.0;    # Constant for the resistance force to aerodynamics
        RDp_F_sec = 50.0;                       # Static friction force (N)
        
        # CONTROL PARAMETERS
        
        # -------------------------------------------------------------------------
        #       Maximal Control Structure :
        #       - all variable are considered ideal
        #       - all sensors are considered ideal
        #       - synthesis carried out uninterrupted
        # -------------------------------------------------------------------------
        
        # *************************************************************************
        #                         Chassis inversion (CHAi)                        
        # *************************************************************************
        
        CHAi_tr_des = 0.1;            # Closed-loop response time (s)
            
        # --- CHOOSE YOUR CONTROLLER ---
        # --- 1 - Proportional
        # --- 2 - Proportional Integral
        # --- 3 - Integral Proportional
        
        CHAi_co = 3.0;                  # Put the number corresponding to the controller
        
        # --- CALCULATION of CONTROLLERS ---
        # --- qsi=1     wn*tr = 4_744
        # --- qsi=0_7	wn*tr = 3
        
        CHAi_qsi = 1.0;                 # Damping factor
        CHAi_wn = 4.744/CHAi_tr_des;  # Natural angular frequency (1/s)
        
        # --- Proportional controller (Pc) ---
                
        CHAi_Pc_Kp = 3.0/(CHAp_K_eq*CHAi_tr_des);             # Proportional gain
        
        # --- Proportional Integral controller (PIc) ---
                
        CHAi_PIc_Kp = (2.0*CHAi_qsi*CHAi_wn)/CHAp_K_eq;       # Proportional gain
        CHAi_PIc_Ki = (CHAi_wn**2.0)/CHAp_K_eq;                # Integral gain
        
                # --- Integral Proportional controller (IPc) ---
                
        CHAi_IPc_Kp = (2.0*CHAi_qsi*CHAi_wn)/CHAp_K_eq;       # Proportional gain
        CHAi_IPc_Ki = (CHAi_wn**2.0)/(CHAp_K_eq*CHAi_IPc_Kp);  # Integral gain
        
        # *************************************************************************
        #                  Mechanical Transmission inversion (MTi)                
        # *************************************************************************
        
        MTi_kD = 0.5;                 # Distribution criterion between right and left wheel
        MTi_kW = 0.5;                 # Weighting criterion
            
        # *************************************************************************
        #                     Electric Machine inversion (EMi)                   
        # *************************************************************************
        
        EMi_tr_des = 10e-3;           # Closed-loop response time (s)
            
        # --- CHOOSE YOUR CONTROLLER ---
        # --- 1 - Proportional
        # --- 2 - Proportional Integral with poles placement
        # --- 2 - Proportional Integral with poles compensation
        # --- 4 - Integral Proportional
        
        EMi_co = 4.0;                   # Put the number corresponding to the controller
        
        # --- CALCULATION of CONTROLLERS ---
        # --- qsi=1     wn*tr = 4_744
        # --- qsi=0_7	wn*tr = 3
        
        EMi_qsi = 1.0;                  # Damping factor
        EMi_wn = 4.744/EMi_tr_des;    # Natural angular frequency (1/s)
        
        # --- Proportional controller (Pc) ---
            
        EMi_Pc_Kp = ((3.0*EMp_T_arm/EMi_tr_des)-1.0)/EMp_K_arm; # Proportional gain
        
        # --- Proportional Integral controller (PIc) ---
        # --- with poles placement (pp)
        
        EMi_PIc_pp_Kp = ((2.0*EMi_qsi*EMi_wn*EMp_T_arm)-1.0)/EMp_K_arm; # Proportional gain
        EMi_PIc_pp_Ki = (EMp_T_arm*EMi_wn**2.0)/EMp_K_arm;     # Integral gain
        
        # --- Proportional Integral controller (PIc) ---
        # --- with poles compensation (pc)
        
        EMi_PIc_pc_Kp = (3.0*EMp_T_arm)/(EMp_K_arm*EMi_tr_des); # Proportional gain
        EMi_PIc_pc_Ki = EMi_PIc_pc_Kp/EMp_T_arm;           # Integral gain
        
        # --- Integral Proportional controller (IPc) ---
        
        EMi_IPc_Kp = ((2.0*EMi_qsi*EMi_wn*EMp_T_arm)-1.0)/EMp_K_arm; # Proportional gain
        EMi_IPc_Ki = (EMp_T_arm*EMi_wn**2.0)/(EMp_K_arm*EMi_IPc_Kp);  # Integral gain
        
        
        
        EMp_T_arm_den = [EMp_T_arm, 1]
    ENDCODE
}
